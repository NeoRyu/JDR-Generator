name: Deploy Multi-Container Docker to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      api_image: jdr-generator-api:latest
      web_image: jdr-generator-web:latest
      gemini_image: jdr-generator-gemini:latest
      openai_image: jdr-generator-openai:latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Authentification Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build API image
      - name: Build API image
        id: build-api
        working-directory: ./api
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-api:latest .
        outputs:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-api:latest

      # Push API image to Docker Hub
      - name: Push API image
        run: docker push ${{ steps.build-api.outputs.image }}

      # Build Web image
      - name: Build Web image
        id: build-web
        working-directory: ./web
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-web:latest .
        outputs:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-web:latest

      # Push Web image to Docker Hub
      - name: Push Web image
        run: docker push ${{ steps.build-web.outputs.image }}

      # Build Gemini image
      - name: Build Gemini image
        id: build-gemini
        working-directory: ./gemini
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-gemini:latest .
        outputs:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-gemini:latest

      # Push Gemini image to Docker Hub
      - name: Push Gemini image
        run: docker push ${{ steps.build-gemini.outputs.image }}

      # Build OpenAI image
      - name: Build OpenAI image
        id: build-openai
        working-directory: ./openai
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-openai:latest .
        outputs:
         image: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-openai:latest

      # Push OpenAi image to Docker Hub
      - name: Push OpenAI image
        run: docker push ${{ steps.build-openai.outputs.image }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Elastic Beanstalk
        uses: aws-actions/aws-elastic-beanstalk-deploy@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          application-name: ${{ secrets.EB_APPLICATION_NAME }}
          environment-name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          deployment-package: Dockerrun.aws.json

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}