pipeline {
    agent any // {label 'linux'}

    parameters {
        choice(choices: ['jenkins','main'], name: 'BRANCH_TO_BUILD', description: 'Choix de la branche')
    }

    tools {
        // http://localhost:8080/manage/configureTools/
        nodejs 'NodeJS 20'
        maven 'Maven 3.8.5'
        MAVEN_IMAGE = 'maven:3.8.5-openjdk-17'
        NODE_IMAGE = 'node:20-alpine'
    }

    environment {
        FRONTEND_DIR = 'web'
        BACKEND_DIR = 'api'
        GEMINI_DIR  = 'gemini'
        OPENAI_DIR  = 'openai'
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo '--- GIT : https://github.com/NeoRyu/JDR-Generator ---'
                git branch: "${params.BRANCH_TO_BUILD}", url: 'https://github.com/NeoRyu/JDR-Generator'
            }
        }

        stage('API - Code Quality Checks') {
            steps {
                dir(env.BACKEND_DIR) {
                    sh '''
                        mvn --version
                    '''
                    echo '--- API : Run Checkstyle ---'
                    sh '''
                        mvn checkstyle:check || true
                    '''
                    echo '--- API : Run OWASP Dependency Check ---'
                    sh '''
                        mvn org.owasp:dependency-check-maven:check || true
                    '''
                }
                echo '--- API : Fin des vérifications de qualité du code ---'
            }
        }

        stage('WEB - Code Quality Checks') {
            steps {
                dir(env.FRONTEND_DIR) {
                    echo '--- WEB : Install Node & NPM dependencies ---'
                    sh '''
                        npm ci
                    '''
                     echo '--- WEB : Run ESLint (Frontend) ---'
                    sh '''
                        npx eslint . || true
                    '''
                }
                echo '--- WEB : Fin des vérifications de qualité du code ---'
            }
        }

        stage('GEMINI - Code Quality Checks') {
            steps {
                dir(env.GEMINI_DIR) {
                    echo '--- GEMINI : Install Node & NPM dependencies ---'
                    sh '''
                        npm ci
                    '''
                    echo '--- GEMINI : Run ESLint ---'
                    sh '''
                        npx eslint . || true
                    '''
                    echo '--- GEMINI : Run npm audit ---'
                    sh '''
                        npm audit --omit=dev || true
                    '''
                }
                echo '--- GEMINI : Fin des vérifications de qualité du code ---'
            }
        }

        stage('OPENAI - Code Quality Checks') {
            steps {
                dir(env.OPENAI_DIR) {
                    echo '--- OPENAI : Install Node & NPM dependencies ---'
                    sh '''
                        npm ci
                    '''
                    echo '--- OPENAI : Run ESLint ---'
                    sh '''
                        npx eslint . || true
                    '''
                    echo '--- OPENAI : Run npm audit ---'
                    sh '''
                        npm audit --omit=dev || true
                    '''
                }
                echo '--- OPENAI : Fin des vérifications de qualité du code ---'
            }
        }

    }
}