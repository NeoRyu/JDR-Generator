name: Deploy JDR Generator with Helm

on:
  push:
    branches:
      - kubernetes
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0 # Version de Helm que vous utilisez

      - name: Set up Kubernetes (Docker Desktop context)
        # Pour un cluster Docker Desktop, vous pourriez avoir besoin d'une étape pour garantir que kubectl est configuré.
        # Si vous déployez sur un cluster cloud (AKS, GKE, EKS), cette étape sera différente (authentification).
        # Pour Docker Desktop/Kind, souvent kubectl est pré-installé sur les runners et peut fonctionner avec un KUBECONFIG
        # Ou vous simulez un environnement. Pour un environnement de CI/CD réel, vous authentifieriez kubectl à votre cluster distant.
        run: |
          # Si vous utilisez un cluster externe, vous configureriez ici votre KUBECONFIG
          # Par exemple, pour GKE: gcloud auth activate-service-account --key-file=...; gcloud container clusters get-credentials ...
          # Pour Docker Desktop en CI, cela est plus complexe car le runner n'a pas accès à votre Docker Desktop local.
          # C'est pourquoi cette méthode est plus adaptée pour un déploiement vers un cluster cloud ou un cluster Kind/K3s hébergé sur une VM dédiée au CI/CD.
          echo "Assurez-vous que kubectl est configuré pour votre cluster cible."
          kubectl config get-contexts

      - name: Create secrets values file for Helm
        # Crée un fichier de valeurs temporaire avec les secrets récupérés de GitHub
        run: |
          cat <<EOF > ai-secrets-values-ci.yaml
          secrets:
            apiKeys:
              existingSecretName: jdr-generator-ai-secrets # Le nom de votre secret Kubernetes
              data:
                GEMINI_API_KEY: "${{ secrets.GEMINI_API_KEY }}"
                FREEPIK_API_KEY: "${{ secrets.FREEPIK_API_KEY }}"
                OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
                OPENAI_ORG_ID: "${{ secrets.OPENAI_ORG_ID }}"
          EOF

      - name: Deploy Helm chart
        run: |
          helm upgrade --install jdr-generator ./jdr-generator-chart \
            -f ./jdr-generator-chart/values.yaml \
            -f ai-secrets-values-ci.yaml \
            --atomic --wait