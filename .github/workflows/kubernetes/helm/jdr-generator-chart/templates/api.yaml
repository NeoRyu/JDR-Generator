# jdr-generator-chart/templates/api.yaml
{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jdr-generator-chart.fullname" . }}-api
  labels:
    {{- include "jdr-generator-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "jdr-generator-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jdr-generator-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jdr-generator-chart.serviceAccountName" . }}
      {{- with .Values.api.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: api
          {{- with .Values.api.securityContext }}
          securityContext:
            {{- toYaml  | nindent 12 }}
          {{- end }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.containerPort }}
              protocol: TCP
          envFrom:
            {{- if .Values.configmaps.api.enabled }}
            - configMapRef:
                name: {{ include "jdr-generator-chart.fullname" . }}-api-config
            {{- end }}
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mysql.existingSecretName }}
                  key: MYSQL_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.mysql.existingSecretName }}
                  key: MYSQL_PASSWORD
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ include "jdr-generator-chart.fullname" . }}-mysql-service:{{ .Values.mysql.service.port }}/{{ .Values.secrets.mysql.data.MYSQL_DATABASE }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"

            {{- if .Values.gemini.enabled }}
            - name: GEMINI_SERVICE_URL
              value: "http://{{ include "jdr-generator-chart.fullname" . }}-gemini-service:{{ .Values.gemini.service.port }}"
            {{- end }}
            {{- if .Values.freepik.enabled }}
            - name: FREEPIK_SERVICE_URL
              value: "http://{{ include "jdr-generator-chart.fullname" . }}-freepik-service:{{ .Values.freepik.service.port }}"
            {{- end }}
            {{- if .Values.openai.enabled }}
            - name: OPENAI_SERVICE_URL
              value: "http://{{ include "jdr-generator-chart.fullname" . }}-openai-service:{{ .Values.openai.service.port }}"
            {{- end }}

            {{- with .Values.api.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.api.livenessProbe.httpGet.path | default "/actuator/health/liveness" }}
              port: {{ .Values.api.containerPort }}
            initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds | default 45 }}
            periodSeconds: {{ .Values.api.livenessProbe.periodSeconds | default 15 }}
            timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds | default 7 }}
            failureThreshold: {{ .Values.api.livenessProbe.failureThreshold | default 3 }}
          readinessProbe:
            httpGet:
              path: {{ .Values.api.readinessProbe.httpGet.path | default "/actuator/health/readiness" }}
              port: {{ .Values.api.containerPort }}
            initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds | default 45 }}
            periodSeconds: {{ .Values.api.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds | default 7 }}
            failureThreshold: {{ .Values.api.readinessProbe.failureThreshold | default 3 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- with .Values.api.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "jdr-generator-chart.fullname" . }}-api-service
  labels:
    {{- include "jdr-generator-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  type: {{ .Values.api.service.type }}
  selector:
    {{- include "jdr-generator-chart.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: api
  ports:
    - port: {{ .Values.api.service.port }}
      targetPort: http
      protocol: TCP
      name: http
{{- end }}