name: Build and push Docker images

on:
  push:
    branches:
      - githubactions
      - main
    paths:
      - 'api/**'
      - 'web/**'
      - 'gemini/**'
      - 'openai/**'
  workflow_dispatch:
    inputs:
      force_rebuild:
        type: boolean
        description: 'Force la reconstruction de toutes les images (mÃªme sans changements)'
        required: false
        default: false

jobs:
  login-dockerhub:
    name: Login to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      logged_in: ${{ steps.login.outcome == 'success' }}
    steps:
      - name: Login to Docker Hub
        id: login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  build-and-push-web:
    name: Build and push web image
    needs: login-dockerhub
    if: github.event.inputs.force_rebuild == 'true' || contains(github.event.commits.*.modified, 'web/') || contains(github.event.commits.*.added, 'web/') || contains(github.event.commits.*.removed, 'web/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./web
          file: ./web/Dockerfile
          push: ${{ needs.login-dockerhub.outputs.logged_in }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-web:${{ github.sha }}, ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-web:latest

  build-and-push-api:
    name: Build and push api image
    needs: login-dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check for API changes
        id: check_api_changes
        uses: actions/github-script@v7
        with:
          script: |
            const commits = context.payload.commits;
            core.info('Commits object:');
            core.info(JSON.stringify(commits, null, 2));
            let apiChanged = false;
            if (commits) {
              for (const commit of commits) {
                core.info('Commit:');
                core.info(JSON.stringify(commit, null, 2));
                const files = commit.files || [];
                core.info('Files in this commit:');
                core.info(JSON.stringify(files, null, 2));
                for (const file of files) {
                  if (file.filename && file.filename.startsWith('api/')) {
                    apiChanged = true;
                    break;
                  }
                }
                if (apiChanged) break;
              }
            }
            core.setOutput('api_changed', apiChanged);
      - name: Set up Docker Buildx
        if: steps.check_api_changes.outputs.api_changed == 'true' || github.event.inputs.force_rebuild == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        if: steps.check_api_changes.outputs.api_changed == 'true' || github.event.inputs.force_rebuild == 'true' && needs.login-dockerhub.outputs.logged_in == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./api
          file: ./api/Dockerfile
          push: ${{ needs.login-dockerhub.outputs.logged_in }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-api:${{ github.sha }}, ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-api:latest

  build-and-push-gemini:
    name: Build and push gemini image
    needs: login-dockerhub
    if: github.event.inputs.force_rebuild == 'true' || contains(github.event.commits.*.modified, 'gemini/') || contains(github.event.commits.*.added, 'gemini/') || contains(github.event.commits.*.removed, 'gemini/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./gemini
          file: ./gemini/Dockerfile
          push: ${{ needs.login-dockerhub.outputs.logged_in }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-gemini:${{ github.sha }}, ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-gemini:latest

  build-and-push-openai:
    name: Build and push openai image
    needs: login-dockerhub
    if: github.event.inputs.force_rebuild == 'true' || contains(github.event.commits.*.modified, 'openai/') || contains(github.event.commits.*.added, 'openai/') || contains(github.event.commits.*.removed, 'openai/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./openai
          file: ./openai/Dockerfile
          push: ${{ needs.login-dockerhub.outputs.logged_in }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-openai:${{ github.sha }}, ${{ secrets.DOCKERHUB_USERNAME }}/jdr-generator-openai:latest