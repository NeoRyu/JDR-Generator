name: Code Quality Checks

on:
  push: # Déclenche le workflow lors de chaque push de code
  pull_request: # Déclenche le workflow lors de chaque création ou mise à jour d'une pull request

jobs:
  java-code-quality:
    name: API Run Java Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      # Récupère le code source du dépôt
      - name: API Checkout code
        uses: actions/checkout@v3
      # Configuration de l'environnement Java
      - name: API Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Exécution de l'analyse de style de code Java avec Maven Checkstyle
      # - name: API Maven Checkstyle
      #   run: cd api && mvn --batch-mode checkstyle:check
      #   run: cd api && mvn --batch-mode -Ddependency-check.skip=true checkstyle:check

      # Exécution de l'analyse statique de code Java pour détecter les bugs potentiels avec Maven SpotBugs
      # - name: API Maven SpotBugs
      #  run: cd api && mvn --batch-mode spotbugs:check

  nodejs-code-quality-web:
    name: Node.js Code Quality - Web
    runs-on: ubuntu-latest
    needs: java-code-quality
    steps:
      # Récupérer le code source du dépôt
      - name: Checkout code
        uses: actions/checkout@v3
      # Configurer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      # Formater le code avec Prettier
      - name: Format code
        run: cd web && npm run format
      # Vérifier le formatage avec Prettier
      - name: Check formatting
        run: cd web && npm run format:check
      # Installer les dépendances
      - name: Install dependencies
        run: cd web && npm install
      # ESLint
      - name: ESLint
        run: cd web && npm run lint
      # Vérifier TypeScript
      - name: TypeScript Check
        run: cd web && npx tsc --noEmit

  nodejs-code-quality-gemini:
    name: Node.js Code Quality - Gemini
    runs-on: ubuntu-latest
    needs: java-code-quality
    steps:
      # Récupérer le code source du dépôt
      - name: Checkout code
        uses: actions/checkout@v3
      # Configurer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      # Formater le code avec Prettier
      - name: Format code
        run: cd gemini && npm run format
      # Vérifier le formatage avec Prettier
      - name: Check formatting
        run: cd gemini && npm run format:check
      # Installer les dépendances
      - name: Install dependencies
        run: cd gemini && npm install
      # ESLint
      - name: ESLint
        run: cd gemini && npm run lint
      # Vérifier TypeScript
      - name: TypeScript Check
        run: cd gemini && npx tsc --noEmit

  nodejs-code-quality-openai:
    name: Node.js Code Quality - OpenAI
    runs-on: ubuntu-latest
    needs: java-code-quality
    steps:
      # Récupérer le code source du dépôt
      - name: Checkout code
        uses: actions/checkout@v3
      # Configurer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      # Formater le code avec Prettier
      - name: Format code
        run: cd openai && npm run format
      # Vérifier le formatage avec Prettier
      - name: Check formatting
        run: cd openai && npm run format:check
      # Installer les dépendances
      - name: Install dependencies
        run: cd openai && npm install
      # ESLint
      - name: OpenAI ESLint
        run: cd openai && npm run lint
      # Vérifier TypeScript
      - name: TypeScript Check
        run: cd openai && npx tsc --noEmit